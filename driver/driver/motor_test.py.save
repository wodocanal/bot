import RPi.GPIO as GPIO

class Motor:
    def __init__(self, speed_pin, dir_pin, brake_pin, inverted=False):
        self.speed_pin = speed_pin
        self.dir_pin = dir_pin
        self.brake_pin = brake_pin
        self.inverted = inverted  # Флаг инверсии направления

        # Инициализируем пины
        GPIO.setup(self.speed_pin, GPIO.OUT)
        GPIO.setup(self.dir_pin, GPIO.OUT)
        GPIO.setup(self.brake_pin, GPIO.OUT)

        # Инициализация ШИМ на пине скорости
        self.pwm = GPIO.PWM(self.speed_pin, 1000)  # ШИМ с частотой 1 кГц
        self.pwm.start(0)  # Начальная скважность 0%

    def set_dir(self, direction):
        """Устанавливает направление вращения мотора (0 - назад, 1 - вперед)"""
        if self.inverted:
            direction = not direction  # Инвертируем направление, если флаг установлен
        GPIO.output(self.dir_pin, GPIO.HIGH if direction else GPIO.LOW)

    def set_speed(self, speed):
        """Устанавливает скорость мотора (значение от 0 до 1024)""
        if speed < 0:
            speed =   # Скорость не может быть отрицательной
        pwm_value = min(int((speed / 1024) * 100), 100)  # Преобразуем в значение для ШИМ
        self.pwm.ChangeDutyCycle(pwm_value)

    def set(self, speed):
        """Устанавливает скорость мотора, определяя направление (значение от -1024 до 1024)"""
        if speed < 0:
            self.set_dir(0)  # Назад
            speed = abs(speed)
        else:
            self.set_dir(1)  # Вперед
        self.set_speed(speed)

    def brake(self, state):
        """Активирует или деактивирует торможение (0 - отпустить тормоз, 1 - тормозить)"""
        GPIO.output(self.brake_pin, GPIO.HIGH if state else GPIO.LOW)

    def stop(self):
        """Останавливает мотор (ставит скорость на 0 и активирует торможение)"""
        self.set_speed(0)
        self.brake(1)  # Активируем торможение

    def cleanup(self):
        """Останавливает PWM и очищает GPIO пины"""
        self.pwm.stop()
        GPIO.cleanup([self.speed_pin, self.dir_pin, self.brake_pin])
